1. Фиксированный словарь. Состоит из понятий и их определений.
2. Синтаксис - правила, описывающие, что и где можно писать. Специальные слова и символы - это часть синтаксиса (правил) языка.
3. Последовательность операций. Алгоритм (пошаговое решение).
4. Повторение определенных операций (цикл).
5. Если последовательность операций используется несколько раз в разных местах, то из неё делают функцию. Функция - это результат применения обобщенного метода. Параметры и аргументы.
6. Предполагаемое знание контекста. Например, контекст кулинарного рецепта подразумевает ваше знание о том, что такое вода и как его кипятить.
7. Данные, которые нужно использовать, создать или изменить.
8. Инструменты, которые используются для работы с данными.
9. Ожидаемый результат.


Императивный стиль (сценарный синтаксис) vs Декларативный стиль (декларативный синтаксис)

Сценарный синтаксис использует конструкцию try-catch-finally.
В сценарном синтаксисе переменной присваивается значение. Императивный стиль подразумевает присваивание, принятие решений, обработку исключений.


Декларативный синтаксис описывает (или объявляет) состояния и результаты.
Декларативный синтаксис предписывает следовать четко определенной структуре (формату).



String (строка) - это последовательность текстовых символов, заключенных в кавычки).


Структура данных - это массив, коллекция, словарь и тд.


JSON можно преобразовать в структуру данных.


JSON (JavaScript Object Notation) - это текстовый формат, который описывает типы и значения, а также выстраивает данные в определенном порядке.
JSON - это DTO.
Объекты с состоянием, должны быть сериализуемыми, то есть иметь возможность записывать свое состояние.
Сериализация объектов в XML или JSON.

У JSON декларативный синтаксис.
Italian Traforetto = Web Form.
Declarative syntax = Web Form.
Declarative syntax = parameter and argument.


Structure of file or document in Trafaretto style:
  - Boilerplate
  - Parameter and "empty place for argument"
    ...



Переменная среды = параметр и аргумент.


Ошибки перехватывает компилятор. А исключения - это ошибки, которые не перехватываются компилятором. 

Без сохранения состояния значит не сериализуются, то есть не могут сохранить свое состояние.
Объекты могут быть сериализуемыми (могут записывать свое состояние на диск).
