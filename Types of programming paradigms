Imperative paradigm vs Declarative paradigm

1. Императивный стиль (сценарный синтаксис) vs Декларативный стиль (декларативный синтаксис)

Императивный стиль:
    - Процедурное программирование
    - Структурное программирование vs Объектно-ориентированное программирование

Декларативный стиль:
    - Функциональное программирование vs Логическое программирование



Декларативный синтаксис:
    - HTML
    - CSS
    - XML
    - XAML
    - JSON
    - YAML
    - Переменная среды (окружения)
    Декларативный синтаксис = Веб-форма
    Декларативный синтаксис = параметр и аргумент
    Декларативный синтаксис = свойство и значение
    *Примечание: свойство - это параметр, а значение - это аргумент.


2. Историческое развитие языков программирования:
    - Процедурное программирование (Например, скрипт на Python, когда все методы в одном классе и одном файле .py).
    - Структурное программирование (Например, линейная структура = линейный алгоритм, ветвляющийся алгоритм, многоальтернативное ветвление (if-elif-else)).
    - Объектно-ориентированное программирование (Наследование, Полиморфизм, Инкапсуляция, Абстракция).
    - Функциональное программирование.



There are 4 major principles that make an language Object Oriented. These are Encapsulation, Data Abstraction, Polymorphism and Inheritance. These are also called as four pillars of Object Oriented Programming.


Виды логик в программировании:
    - параметр и аргумент.
    - процедура (Sub procedure), не имеет возвращаемого значения, а изменяет состояние (status) объекта.
    - функция (Function), имеет возвращаемое значение, не изменяет состояние объекта.

    - метод void - это процедура.
    - метод без void - это функция.

    процедуры, функции и методы имеют параметры, куда передаются аргументы.
